
	<script src="<?php echo base_url(); ?>script/dropzone/dropzone.min.js"></script>
	<script src="<?php echo base_url(); ?>script/vis/dist/vis.js"></script>
	
	<script>		

		Dropzone.autoDiscover = false;
		var myDropzone = new Dropzone("#my-dropzone", {

			
			url: "<?php echo site_url("dentist/upload") ?>",
			acceptedFiles: "image/*",
			addRemoveLinks: false,
			removedfile: function(file) {
				var name = file.name;

				$.ajax({
					type: "post",
					url: "<?php echo site_url("dentist/remove") ?>",
					data: { file: name },
					dataType: 'html'
				});

				// remove the thumbnail
				var previewElement;
				return (previewElement = file.previewElement) != null ? (previewElement.parentNode.removeChild(file.previewElement)) : (void 0);
			},

			
				
			complete: function(){
				var me = this;
				$.get("<?php echo site_url("dentist/list_file") ?>", function(data) {
					if (data.length > 0) {
						$.each(data, function(key, value) {
							var mockFile = value;
							items.add({id: items.length+1, group: value.category, content: '<span data-target="#modal_2" data-toggle="modal" onclick="modal_cha(' + value.category + ', \'' + value.folder_name + '\')">#all</span>', start: value.folder_name});
							timeline.fit();
						});
					}
				});
				
			},
			

			init: function() {
				var me = this;
				$.get("<?php echo site_url("dentist/list_files") ?>", function(data) {
					// if any files already in server show all here
					if (data.length > 0) {
						$.each(data, function(key, value) {
							var mockFile = value;
							/*
							me.emit("addedfile", mockFile);
							me.emit("thumbnail", mockFile, "<?php echo base_url(); ?>uploads/" + value.folder_name + "/" + value.name);
							me.emit("complete", mockFile);
							*/		

							items.add({id: items.length+1, group: value.category, content: '<span data-target="#modal_2" data-toggle="modal" onclick="modal_cha(' + value.category + ', \'' + value.folder_name + '\')">#all</span>', start: value.folder_name});
							timeline.fit();
							
						});
					}
				});
			}
		});
/*
		myDropzone.on("addedfile", function(file) {
			var me = this;
			$.get("<?php echo site_url("dentist/upload") ?>", function(data) {
				if (data.length > 0) {
					$.each(data, function(key, value) {
						var mockFile = value;
						items.add({id: items.length+1, group: value.category, content: '<span data-target="#20130420" data-toggle="modal">#all</span>', start: value.folder_name});
					});
				}
			});
		});
*/


		// DOM element where the Timeline will be attached
		var container = document.getElementById('visualization');

		// create a data set with groups
		var names = ['Charts', 'Photo', 'Periapical', 'Panorama'];
		var groups = new vis.DataSet();
		for (var g = 0; g < 4; g++) {
			groups.add({id: g, content: names[g]});
		}

		// Create a DataSet (allows two way data-binding)
		var items = new vis.DataSet([
		//	{id: 1, group: 0, content: '<span data-target="#20130420" data-toggle="modal">charting</span>', start: '2013-04-20'},
		//	{id: 2, group: 1, content: '<span data-target="#20130414" data-toggle="modal">#all</span>', start: '2013-04-14'},
		//	{id: 3, group: 2, content: '<span data-target="#20130416" data-toggle="modal">#all</span>', start: '2013-04-16'},
		//	{id: 4, group: 3, content: '<span data-target="#20130418" data-toggle="modal">#all</span>', start: '2013-04-18'}
		]);

		// Configuration for the Timeline
		var options = {
			editable: false,
			min: "2000-01-01",
			//max: new Date,
			max: new Date(new Date().getTime()+(365*24*60*60*1000)),
			zoomMin: 600000*60*24
		};

		// Create a Timeline
		var timeline = new vis.Timeline(container, items, options, groups);


		//$('#example').timeliny();
		$(document).ready(function(){
			$('.dropdown-submenu a.test').on("click", function(e){
				$(this).next('ul').toggle();
				e.stopPropagation();
				e.preventDefault();
			});
		});

		function modal_cha(a, b){
			$("#modal_2_html").html("");
			$.ajax({
				url: "<?php echo site_url("dentist/get_images") ?>",
				type: "POST",
				data: {
					category : a,
					folder_name : b
				},
				cache: false,
				dataType: 'json',
				success: function(data) {	
					var args = "";
					if (data.length > 0) {
						$.each(data, function(key, value) {
							var mockFile = value;
							if (args == "")
							{
								arg = "<div class='item active'><img src='<?php echo base_url(); ?>uploads/" + b + "/" + value.local_name + "'><div class='carousel-caption'><h2>장민정</h2><p>" + value.folder_name + "</p></div></div>";
							}
							else
							{
								arg = "<div class='item'><img src='<?php echo base_url(); ?>uploads/" + b + "/" + value.local_name + "'><div class='carousel-caption'><h2>장민정</h2><p>" + value.folder_name + "</p></div></div>";
							}
							
							args = args + arg;
						});
					}					
					$('#modal_2_html').html(args);
				},
				error: function(request,status,error){
				 	alert("code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+error); 				
				},
			})
		}


		function incrementValue(e, a)
		{
			var b = $(e).text();
			var c = "";

			switch (a)
			{
			
			case 'Pain_History' :
				switch (b)
				{
				case "first time" : c = "experienced";
					break;
				case "experienced" : c = "others";
					break;
				case "others" : c = "";
					break;
				default : c = "first time";
					break;
				}
				break;
			case 'Pain_Duration' :
				switch (b)
				{
				case "come and go" : c = "persistent";
					break;
				case "persistent" : c = "others";
					break;
				case "others" : c = "";
					break;
				default : c = "come and go";
					break;
				}
				break;	
			case 'Pain_Onset' :
				switch (b)
				{
				case "cold" : c = "hot";
					break;
				case "hot" : c = "breathing in";
					break;
				case "breathing in" : c = "chewing";
					break;
				case "chewing" : c = "physical activity";
					break;
				case "physical activity" : c = "a sweet";
					break;
				case "a sweet" : c = "saltiness";
					break;
				case "saltiness" : c = "tongue push";
					break;
				case "tongue push" : c = "cutlery touch";
					break;
				case "cutlery touch" : c = "";
					break;
				default : c = "cold";
					break;
				}
				break;	
			case 'Pain_Frequency' :
				switch (b)
				{
				case "once in 6 month" : c = "once a month";
					break;
				case "once a month" : c = "twice a month";
					break;
				case "twice a month" : c = "once a week";
					break;
				case "once a week" : c = "twice a week";
					break;
				case "twice a week" : c = "once in two days";
					break;
				case "once in two days" : c = "once in a day";
					break;
				case "once in a day" : c = "all day long";
					break;
				case "all day long" : c = "";
					break;
				default : c = "once in 6 month";
					break;
				}
				break;				
			case 'Pain_Type' :
				switch (b)
				{
				case "vague" : c = "sharp";
					break;
				case "sharp" : c = "dull ache";
					break;
				case "dull ache" : c = "throbbing";
					break;
				case "throbbing" : c = "surging";
					break;
				case "surging" : c = "tingling";
					break;
				case "tingling" : c = "";
					break;
				default : c = "vague";
					break;
				}
				break;
			case 'Pain_Pattern' :
				switch (b)
				{
				case "worse at mealtimes" : c = "worse at night";
					break;
				case "worse at night" : c = "worse in the morning";
					break;
				case "worse in the morning" : c = "lying down";
					break;
				case "lying down" : c = "sitting";
					break;
				case "sitting" : c = "standing up";
					break;
				case "standing up" : c = "";
					break;
				default : c = "worse at mealtimes";
					break;
				}
				break;				
			case 'Pain_Referral' :
				switch (b)
				{
				case "head" : c = "eye";
					break;
				case "eye" : c = "ear";
					break;
				case "ear" : c = "shoulder";
					break;
				case "shoulder" : c = "";
					break;
				default : c = "head";
					break;
				}
				break;						
			
			case 'Probing' :
				switch (b)
				{
				case "1" : c = "2";
					break;
				case "2" : c = "3";
					break;
				case "3" : c = "4";
					break;
				case "4" : c = "5";
					break;
				case "5" : c = "6";
					break;
				case "6" : c = "7";
					break;
				case "7" : c = "8";
					break;
				case "8" : c = "9";
					break;
				case "9" : c = "10";
					break;
				case "10" : c = "";
					break;
				default : c = "1";
					break;
				}
				break;

			case 'EPT' :
				switch (b)
				{
				case "-" : c = "+";
					break;
				case "+" : c = "";
					break;
				default : c = "-";
					break;
				}
				break;

			case 'Cold' :
				switch (b)
				{
				case "-" : c = "+";
					break;
				case "+" : c = "++";
					break;
				case "++" : c = "+++";
					break;
				case "+++" : c = "";
					break;
				default : c = "-";
					break;
				}
				break;

			case 'Hot' :
				switch (b)
				{
				case "-" : c = "+";
					break;
				case "+" : c = "++";
					break;
				case "++" : c = "+++";
					break;
				case "+++" : c = "";
					break;
				default : c = "-";
					break;
				}
				break;

			case 'Per' :
				switch (b)
				{
				case "-" : c = "+";
					break;
				case "+" : c = "";
					break;
				default : c = "-";
					break;
				}
				break;

			case 'Mob' :
				switch (b)
				{				
				case "1" : c = "2";
					break
				case "2" : c = "3";
					break
				case "3" : c = "";
					break
				default : c = "1";
					break;
				}
				break;

			case 'Crown' :
				switch (b)
				{				
				case "Acrylic Resin" : c = "Gold";
					break;
				case "Gold" : c = "PFM";
					break;
				case "PFM" : c = "PFG";
					break;
				case "PFG" : c = "Porcelain";
					break;
				case "Porcelain" : c = "Zirconia";
					break;
				case "Zirconia" : c = "";
					break;
				default : c = "Acrylic Resin";
					break;
				}
				break;
			
			case 'Class' :
				switch (b)
				{				
				case "Resin" : c = "GI";
					break;
				case "GI" : c = "Amalgam";
					break;
				case "Amalgam" : c = "Gold";
					break;
				case "Gold" : c = "";
					break;
				default : c = "Resin";
					break;
				}
				break;

			case 'PAI' :
			case 'USPHS' :
				switch (b)
				{				
				case "Alpha" : c = "Bravo";
					break;
				case "Bravo" : c = "Charlie";
					break;
				case "Charlie" : c = "";
					break;
				default : c = "Alpha";
					break;
				}
				break;

			default : c = "";
				break;
			
			}
			
			$(e).text(c);
		}
		

		function test_dmf()
		{
			$(".dmf").each(function(index, elem){
				if($(elem).html() != "")
				{
					var elem_class = $(elem).attr("class");
					var elem_classArray = elem_class.split(" ");
					var t_table = elem_classArray[0];
					var t_coloum = elem_classArray[1];
					var t_tn = elem_classArray[2];
					var elem_html = $(elem).html();
					/*
					alert(t_table);
					alert(t_coloum);
					alert(t_tn);
					alert(elem_html);
					*/

					$.ajax({
						url: "<?php echo site_url("dentist/insert_chart") ?>",
						type: "POST",
						data: {
							table : t_table,
							coloum : t_coloum,
							tn : t_tn,
							html : elem_html
						},
						cache: false,
						success: function(data) {	
							alert("suc");
						},
						error: function(request,status,error){
							alert("code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+error); 				
						},
					})
					
				}
			});
		}















	</script>